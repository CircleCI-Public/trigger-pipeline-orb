version: 2.1
description: |
    Allows to trigger a CircleCI pipeline.
display:
    home_url: https://github.com/CircleCI-Public/trigger-pipeline-orb
    source_url: https://github.com/CircleCI-Public/trigger-pipeline-orb
commands:
    trigger:
        description: |
            This command triggers a CircleCI pipeline. It requires JQ to work. For more information about the parameters go to https://circleci.com/docs/triggers-overview/#run-a-pipeline-using-the-api
        parameters:
            branch:
                default: ""
                description: Branch where the pipeline will be run from. Not compatible with tag.
                type: string
            definition_id:
                description: Definition id of the pipeline to run. Can be found on project settings
                type: string
            project_slug:
                description: The project slug. It can be found on project settings
                type: string
            tag:
                default: ""
                description: Tag where the pipeline will be run from. Not compatible with branch.
                type: string
            token:
                description: Name of the environment variable fro the PAT token to use for authentication.
                type: string
        steps:
            - run:
                command: |-
                    #!/bin/bash

                    PARAM_PROJECT_SLUG="$(circleci env subst "$PARAM_PROJECT_SLUG")"
                    PARAM_TOKEN="$(circleci env subst "$PARAM_TOKEN")"
                    PARAM_BRANCH="$(circleci env subst "$PARAM_BRANCH")"
                    PARAM_TAG="$(circleci env subst "$PARAM_TAG")"
                    PARAM_DEFINITION_ID="$(circleci env subst "$PARAM_DEFINITION_ID")"

                    if ! command -v jq >/dev/null 2>&1; then
                        echo "JQ is required"
                        exit 1
                    fi

                    if [ -n "$PARAM_PROJECT_SLUG" ]; then
                        echo "A project slug is required"
                        exit 1
                    fi

                    if [ -n "$PARAM_DEFINITION_ID" ]; then
                        echo "A definition id is required"
                        exit 1
                    fi

                    if [ -n "$PARAM_TOKEN" ]; then
                        echo "A token is required"
                        exit 1
                    fi

                    if [ -n "$PARAM_BRANCH" ]; then
                        echo "Triggering from branch $PARAM_BRANCH"
                        DATA=$(jq -n --arg definition_id "$PARAM_DEFINITION_ID" --arg branch "$PARAM_BRANCH" \
                            '{definition_id: $definition_id, config: {branch: $branch}, checkout: {branch: $branch}}')
                    elif [ -n "$PARAM_TAG" ]; then
                        echo "Triggering from tag $PARAM_TAG"
                        DATA=$(jq -n --arg definition_id "$PARAM_DEFINITION_ID" --arg tag "$PARAM_TAG" \
                            '{definition_id: $definition_id, config: {tag: $tag}, checkout: {tag: $tag}}')
                    else
                        echo "A branch or a tag is required"
                        exit 1
                    fi

                    curl -X POST "https://circleci.com/api/v2/project/$PARAM_PROJECT_SLUG/pipeline/run" \
                      --header "Circle-Token: $PARAM_TOKEN" \
                      --header "content-type: application/json" \
                      --data "$DATA"
                environment:
                    PARAM_BRANCH: <<parameters.branch>>
                    PARAM_DEFINITION_ID: <<parameters.definition_id>>
                    PARAM_PROJECT_SLUG: <<parameters.project_slug>>
                    PARAM_TAG: <<parameters.tag>>
                    PARAM_TOKEN: <<parameters.token>>
                name: Trigger pipeline
jobs:
    trigger:
        description: |
            This job triggers a CircleCI pipeline. For more information about the parameters go to https://circleci.com/docs/triggers-overview/#run-a-pipeline-using-the-api
        docker:
            - image: cimg/base:stable
        parameters:
            branch:
                default: ""
                description: Branch where the pipeline will be run from. Not compatible with tag.
                type: string
            definition_id:
                description: Definition id of the pipeline to run. Can be found on project settings
                type: string
            executor: null
            project_slug:
                description: The project slug. It can be found on project settings
                type: string
            tag:
                default: ""
                description: Tag where the pipeline will be run from. Not compatible with branch.
                type: string
            token:
                description: Name of the environment variable fro the PAT token to use for authentication.
                type: string
        steps:
            - trigger:
                branch: <<parameters.branch>>
                definition_id: <<parameters.definition_id>>
                project_slug: <<parameters.project_slug>>
                tag: <<parameters.tag>>
                token: <<parameters.token>>
examples:
    trigger_branch:
        description: |
            Triggers a Pipeline from a branch.
        usage:
            version: "2.1"
            orbs:
                trigger-pipeline: circleci/trigger-pipeline@1.0.0
            workflows:
                trigger-pipeline:
                    jobs:
                        - trigger-pipeline/trigger:
                            branch: main
                            definition_id: $DEFINITION_ID
                            project_slug: github/CircleCI-Public/trigger-pipeline-orb
                            token: $CIRCLECI_PAT

